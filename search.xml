<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>解决unittest测试方法执行时乱序的问题</title>
      <link href="/2020/03/08/%E6%B5%8B%E8%AF%95%E6%A1%86%E6%9E%B6%E5%8F%8A%E5%B7%A5%E5%85%B7/Unittest/%E8%A7%A3%E5%86%B3unittest%E6%B5%8B%E8%AF%95%E6%96%B9%E6%B3%95%E6%89%A7%E8%A1%8C%E6%97%B6%E4%B9%B1%E5%BA%8F%E7%9A%84%E9%97%AE%E9%A2%98/"/>
      <url>/2020/03/08/%E6%B5%8B%E8%AF%95%E6%A1%86%E6%9E%B6%E5%8F%8A%E5%B7%A5%E5%85%B7/Unittest/%E8%A7%A3%E5%86%B3unittest%E6%B5%8B%E8%AF%95%E6%96%B9%E6%B3%95%E6%89%A7%E8%A1%8C%E6%97%B6%E4%B9%B1%E5%BA%8F%E7%9A%84%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h3 id="在unittest的使用过程中，当我们想要按顺序执行测试方法的时候，总会遇到测试方法执行的顺序和自己预想的不一致的情况。下面是3种常规的解决方法："><a href="#在unittest的使用过程中，当我们想要按顺序执行测试方法的时候，总会遇到测试方法执行的顺序和自己预想的不一致的情况。下面是3种常规的解决方法：" class="headerlink" title="在unittest的使用过程中，当我们想要按顺序执行测试方法的时候，总会遇到测试方法执行的顺序和自己预想的不一致的情况。下面是3种常规的解决方法："></a>在unittest的使用过程中，当我们想要按顺序执行测试方法的时候，总会遇到测试方法执行的顺序和自己预想的不一致的情况。下面是3种常规的解决方法：</h3><h4 id="方法一：-在方法名里写上序号"><a href="#方法一：-在方法名里写上序号" class="headerlink" title="方法一： 在方法名里写上序号"></a>方法一： 在方法名里写上序号</h4><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> unittest</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyDemo</span><span class="params">(unittest.TestCase)</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">test_001_c</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">"c"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">test_002_b</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">"b"</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    unittest.main()</span><br></pre></td></tr></table></figure></div><h4 id="方法二：-用TestSuite手动添加测试方法"><a href="#方法二：-用TestSuite手动添加测试方法" class="headerlink" title="方法二： 用TestSuite手动添加测试方法"></a>方法二： 用TestSuite手动添加测试方法</h4><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> unittest</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyDemo</span><span class="params">(unittest.TestCase)</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">test_c</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">"c"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">test_b</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">"b"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">test_a</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">"a"</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    suites = unittest.TestSuite()</span><br><span class="line">    <span class="comment"># print(dir(MyDemo)[-3:]) </span></span><br><span class="line">    <span class="comment"># &gt;&gt;&gt; ['test_a', 'test_b', 'test_c']  用dir遍历循环添加是不可行的</span></span><br><span class="line">    suites.addTest(MyDemo(<span class="string">"test_c"</span>))</span><br><span class="line">    suites.addTest(MyDemo(<span class="string">"test_b"</span>))</span><br><span class="line">    suites.addTest(MyDemo(<span class="string">"test_a"</span>))</span><br><span class="line"></span><br><span class="line">    runner = unittest.TextTestRunner()</span><br><span class="line">    runner.run(suites)</span><br></pre></td></tr></table></figure></div><h4 id="方法三：-重写TestLoader类的getTestCaseNames方法"><a href="#方法三：-重写TestLoader类的getTestCaseNames方法" class="headerlink" title="方法三： 重写TestLoader类的getTestCaseNames方法"></a>方法三： 重写TestLoader类的getTestCaseNames方法</h4><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> inspect</span><br><span class="line"><span class="keyword">import</span> unittest</span><br><span class="line"><span class="keyword">from</span> typing <span class="keyword">import</span> Type, Sequence</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyTestLoader</span><span class="params">(unittest.TestLoader)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">getTestCaseNames</span><span class="params">(self, testCaseClass: Type[unittest.case.TestCase])</span> -&gt; Sequence[str]:</span></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">st</span><span class="params">(func)</span>:</span></span><br><span class="line">            <span class="keyword">return</span> _src.index(inspect.getsource(getattr(testCaseClass, func)).split(<span class="string">"\n"</span>)[<span class="number">0</span>])</span><br><span class="line">        _src = inspect.getsource(testCaseClass)</span><br><span class="line">        funcs = [func <span class="keyword">for</span> func <span class="keyword">in</span> dir(testCaseClass) <span class="keyword">if</span> func.startswith(<span class="string">"test"</span>)]</span><br><span class="line">        <span class="keyword">return</span> sorted(funcs, key=st)</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyDemo</span><span class="params">(unittest.TestCase)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">test_c</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">"c"</span>)</span><br><span class="line">        </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">test_b</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">"b"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">test_a</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">"a"</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    loader = MyTestLoader()</span><br><span class="line">    suites = loader.loadTestsFromTestCase(MyDemo)</span><br><span class="line">    runner = unittest.TextTestRunner()</span><br><span class="line">    runner.run(suites)</span><br><span class="line">    <span class="comment"># or</span></span><br><span class="line">    <span class="comment"># unittest.main(testLoader=loader)</span></span><br></pre></td></tr></table></figure></div>]]></content>
      
      
      <categories>
          
          <category> 测试框架及工具 </category>
          
          <category> Unittest </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Unittest </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mysql远程登录不上的问题</title>
      <link href="/2020/03/07/%E6%95%B0%E6%8D%AE%E5%BA%93/Mysql/%E8%BF%9C%E7%A8%8B%E7%99%BB%E5%BD%95%E4%B8%8D%E4%B8%8A%E7%9A%84%E9%97%AE%E9%A2%98/"/>
      <url>/2020/03/07/%E6%95%B0%E6%8D%AE%E5%BA%93/Mysql/%E8%BF%9C%E7%A8%8B%E7%99%BB%E5%BD%95%E4%B8%8D%E4%B8%8A%E7%9A%84%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h3 id="新安装的MySQL在远程登录时登录不上。"><a href="#新安装的MySQL在远程登录时登录不上。" class="headerlink" title="新安装的MySQL在远程登录时登录不上。"></a>新安装的MySQL在远程登录时登录不上。</h3><h4 id="原因："><a href="#原因：" class="headerlink" title="原因："></a>原因：</h4><blockquote><p>1、MySQL 默认不允许 用 root 用户远程登录数据库<br>  2、MySQL8.0之后用的是新的加密方式会导致用户信息验证不通过</p></blockquote><h4 id="解决："><a href="#解决：" class="headerlink" title="解决："></a>解决：</h4><blockquote><p>修改对应的权限<br>    <div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">sql</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> mysql; <span class="comment">--选择mysql库</span></span><br><span class="line"><span class="keyword">select</span> host,<span class="keyword">user</span>,<span class="keyword">plugin</span>,authentication_string <span class="keyword">from</span> mysql.user; <span class="comment">--查看用户信息</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">USER</span> <span class="string">'root'</span>@<span class="string">'%'</span> <span class="keyword">IDENTIFIED</span> <span class="keyword">WITH</span> mysql_native_password <span class="keyword">By</span> <span class="string">'aa123456'</span>;  <span class="comment">--修改允许登录的IP 和 加密方式</span></span><br><span class="line"><span class="keyword">FLUSH</span> <span class="keyword">PRIVILEGES</span>; <span class="comment">--刷新权限</span></span><br></pre></td></tr></table></figure></div><br> ‘root’@’%’ 中 % 表示允许任意IP访问, 如只允许本机访问则为 ‘root’@’localhost’ 或 ‘root’@’127.0.0.1’</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
          <category> Mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mongodb统计查询</title>
      <link href="/2020/03/07/%E6%95%B0%E6%8D%AE%E5%BA%93/Mongodb/%E7%BB%9F%E8%AE%A1%E6%9F%A5%E8%AF%A2/"/>
      <url>/2020/03/07/%E6%95%B0%E6%8D%AE%E5%BA%93/Mongodb/%E7%BB%9F%E8%AE%A1%E6%9F%A5%E8%AF%A2/</url>
      
        <content type="html"><![CDATA[<h4 id="1、字段求和（待统计字段是-Int-类型）"><a href="#1、字段求和（待统计字段是-Int-类型）" class="headerlink" title="1、字段求和（待统计字段是 Int 类型）"></a>1、字段求和（待统计字段是 Int 类型）</h4><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; select sum(amount) as sum_amount, sum(inprice) as sum_inprice from test where status&#x3D;&#39;00&#39;;</span><br><span class="line"></span><br><span class="line">db.test.aggregate([</span><br><span class="line">    &#123;&quot;$match&quot;:&#123;&quot;status&quot;: &quot;00&quot;&#125;&#125;,</span><br><span class="line">    &#123;&quot;$group&quot;:&#123;&quot;_id&quot;:&quot;&quot;, &quot;sum_amount&quot;:&#123;&quot;$sum&quot;: &quot;$amount&quot;&#125;, &quot;sum_inprice &quot;:&#123;&quot;$sum&quot;: &quot;$inprice&quot;&#125;&#125;&#125;</span><br><span class="line">])</span><br><span class="line"></span><br><span class="line">Result:</span><br><span class="line">&#123; &quot;_id&quot; : &quot;&quot;, &quot;sum_amount&quot; : NumberInt(2), &quot;sum_inprice&quot;: NumberInt(4)&#125;</span><br></pre></td></tr></table></figure></div><h4 id="2、字段求和（待统计字段不是-Int-类型）"><a href="#2、字段求和（待统计字段不是-Int-类型）" class="headerlink" title="2、字段求和（待统计字段不是 Int 类型）"></a>2、字段求和（待统计字段不是 Int 类型）</h4><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; select sum(parval) from test where dStatus&#x3D;&#39;00&#39; and orderTime&gt;&#x3D;&#39;142526&#39; and orderTime &lt; &#39;142527&#39;;</span><br><span class="line"></span><br><span class="line">db.test.mapReduce(</span><br><span class="line">    function()&#123; </span><br><span class="line">        emit(&quot;&quot;, this.parval);</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    function(key, values)&#123;</span><br><span class="line">        var _s &#x3D; parseFloat(0.00);</span><br><span class="line">        values.forEach(</span><br><span class="line">            function(v)&#123;</span><br><span class="line">                _s +&#x3D; parseFloat(v);</span><br><span class="line">            &#125;</span><br><span class="line">        )</span><br><span class="line">        return _s;</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        query:&#123;&quot;dStatus&quot;: &quot;00&quot;, &quot;orderTime&quot;: &#123;&quot;$gte&quot;: &quot;142526&quot;, &quot;$lt&quot;: &quot;142527&quot;&#125;&#125;,</span><br><span class="line">        out: &quot;total&quot;</span><br><span class="line">    &#125;</span><br><span class="line">).find()</span><br></pre></td></tr></table></figure></div><h4 id="3、数量统计"><a href="#3、数量统计" class="headerlink" title="3、数量统计"></a>3、数量统计</h4><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; select count(1) as total_count from test where status&#x3D;&#39;00&#39; group by mobile having count(1)&gt;&#x3D; 1000</span><br><span class="line"></span><br><span class="line">db.test.aggregate([</span><br><span class="line">    &#123;&quot;$match&quot;:&#123;&quot;status&quot;: &quot;00&quot;&#125;&#125;,   &#x2F;&#x2F;where 条件</span><br><span class="line">    &#123;&quot;$group&quot;:&#123;&quot;_id&quot;:&#123;&quot;mobile&quot;:&quot;$mobile&quot;&#125;, &quot;total_count&quot;:&#123;&quot;$sum&quot;: 1&#125;&#125;&#125;,  &#x2F;&#x2F;group by mobile</span><br><span class="line">    &#123;&quot;$match&quot;:&#123;&quot;total_count&quot;:&#123;&quot;$gte&quot;:1000&#125;&#125;&#125;   &#x2F;&#x2F;分组之后再次过滤匹配</span><br><span class="line">])</span><br></pre></td></tr></table></figure></div>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
          <category> Mongodb </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mongodb </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用Hexo创建博客网站</title>
      <link href="/2020/03/07/unclassified/create_blog_by_hexo/"/>
      <url>/2020/03/07/unclassified/create_blog_by_hexo/</url>
      
        <content type="html"><![CDATA[<p>1231234</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>创建一个自己的博客网站</title>
      <link href="/2020/03/07/unclassified/create_first_blog/"/>
      <url>/2020/03/07/unclassified/create_first_blog/</url>
      
        <content type="html"><![CDATA[<h2 id="1：创建Github账号"><a href="#1：创建Github账号" class="headerlink" title="1：创建Github账号"></a>1：创建Github账号</h2><blockquote><p>略</p></blockquote><h2 id="2：新建一个Repository"><a href="#2：新建一个Repository" class="headerlink" title="2：新建一个Repository"></a>2：新建一个Repository</h2><blockquote><p>1、创建一个 名为 <strong>username</strong>.github.io 的 <strong>Repository</strong>，<strong>username</strong>就是github的用户名。<br>2、例如 <strong>xiaowaijing.github.io</strong>， 访问地址就是 <a href title target><em>https:&#x2F;&#x2F;<strong>xiaowaijing</strong>.github.io</em></a><br><a href="/2020/03/07/unclassified/create_first_blog/QQ%E6%88%AA%E5%9B%BE20200307152504.png" data-fancybox="group" data-caption="undefined" class="fancybox"><img class="lazyload" data-src="/2020/03/07/unclassified/create_first_blog/QQ%E6%88%AA%E5%9B%BE20200307152504.png"></a><br>3、点击 <strong>Create repository</strong> 就OK了。</p></blockquote><h2 id="3：测试一下"><a href="#3：测试一下" class="headerlink" title="3：测试一下"></a>3：测试一下</h2><blockquote><p>1、点击 <strong>Create new file</strong> 新建一个 <strong>index.html</strong> 文件。<br><a href="/2020/03/07/unclassified/create_first_blog/QQ%E6%88%AA%E5%9B%BE20200307172815.png" data-fancybox="group" data-caption="undefined" class="fancybox"><img class="lazyload" data-src="/2020/03/07/unclassified/create_first_blog/QQ%E6%88%AA%E5%9B%BE20200307172815.png"></a><br>2、随便输入些字符，然后记得<strong>保存</strong>。<br><a href="/2020/03/07/unclassified/create_first_blog/QQ%E6%88%AA%E5%9B%BE20200307172850.png" data-fancybox="group" data-caption="undefined" class="fancybox"><img class="lazyload" data-src="/2020/03/07/unclassified/create_first_blog/QQ%E6%88%AA%E5%9B%BE20200307172850.png"></a><br>3、过一会儿访问就可以看到信息<br><a href="/2020/03/07/unclassified/create_first_blog/QQ%E6%88%AA%E5%9B%BE20200307173319.png" data-fancybox="group" data-caption="undefined" class="fancybox"><img class="lazyload" data-src="/2020/03/07/unclassified/create_first_blog/QQ%E6%88%AA%E5%9B%BE20200307173319.png"></a></p></blockquote><h2 id="4：使用Hexo生成博客网站"><a href="#4：使用Hexo生成博客网站" class="headerlink" title="4：使用Hexo生成博客网站"></a>4：使用Hexo生成博客网站</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <a href="../create_blog_by_hexo">→使用Hexo生成博客网站</a></p>]]></content>
      
      
      <categories>
          
          <category> 暂未分类 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Github </tag>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
